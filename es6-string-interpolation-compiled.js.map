{"version":3,"sources":["es6-string-interpolation.js"],"names":[],"mappings":";;;;;;;;;;AAIA,IAAI,OAAO,KAAX;AACA,IAAI,MAAM,EAAV;;AAEA,QAAQ,GAAR,CAAe,IAAf,YAA0B,GAA1B;;AAEA,IAAI,kLAAJ;;AAQA,QAAQ,GAAR,CAAY,gBAAZ;;;AAGA,QAAQ,GAAR,CAAY,SAAZ,kBAAwB,gBAAxB;;AAGA,SAAS,SAAT,CAAmB,YAAnB,EAAiC;AAC/B;;AACA,MAAI,IAAI,aAAa,CAAb,CAAR;;;;AAIA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACzC,QAAI,MAAM,OAAO,UAAU,CAAV,CAAP,CAAV;;;AAGA,SAAK,IAAI,OAAJ,CAAY,IAAZ,EAAkB,OAAlB,EACF,OADE,CACM,IADN,EACY,MADZ,EAEF,OAFE,CAEM,IAFN,EAEY,MAFZ,CAAL;;;AAKA,SAAK,aAAa,CAAb,CAAL;AACD;AACD,SAAO,CAAP;AACD","file":"es6-string-interpolation-compiled.js","sourcesContent":["/**\n * Created by schandramouli on 6/7/16.\n */\n\nvar name = 'sai';\nvar age = 22;\n\nconsole.log(`${name} is ${age} years old :)`);\n\nvar multiline_string = `This is a multi-line string\nwhich spans across lines\nand still executes\nwith the newlines intact\nkinda like pythons \"\"\", but\nwith <pre> kinda stuff\n`;\n\nconsole.log(multiline_string);\n\n// Also you can beautiful tags with it, which act like functions\nconsole.log(SaferHTML`${multiline_string}`);\n\n\nfunction SaferHTML(templateData) {\n  \"use strict\";\n  var s = templateData[0];\n  // ONLY the variables are in the templateData,\n  // everything else (aka) normal strings are in\n  // the arguments variable\n  for (var i = 1; i < arguments.length; i++) {\n    var arg = String(arguments[i]);\n\n    // Escape special characters in the substitution.\n    s += arg.replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\");\n\n    // Don't escape special characters in the template.\n    s += templateData[i];\n  }\n  return s;\n}"]}